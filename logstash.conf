input {
    stdin {}
}

filter {
    # Initial parsing
    grok {
        match => {
            "message" => "%{IPORHOST:ip}"
        }
    }
    public_ip {
        source => "ip"
        target_ipv => "src_ipv"
        target_pub_ip => "src_public_ip"
    }
    # SpamHaus IP Checker
    # https://www.spamhaus.org/faq/section/DNSBL%20Usage#200
    # https://www.spamhaus.org/zen/
    if [target_pub_ip] == [true] {  
        if [src_ipv] == '4' {
            grok {
                match => {
                    "message" => "%{WORD:addr1}.%{WORD:addr2}.%{WORD:addr3}.%{WORD:addr4}"
                    tag_on_failure => ["Failed parsing IP"]
                }
            }
            mutate {
                add_field => {
                    "spamhaus_reverse_lookup" => "%{addr4}.%{addr3}.%{addr2}.%{addr1}.zen.spamhaus.org"
                }
            }
            dns {
                resolve => ["spamhaus_reverse_lookup"]
                nameserver => ["8.8.8.8"]
                add_tag => ["dns_successful_lookup"]
                action => replace
            }
            if "dns_successful_lookup" in [tags] {
                if [spamhaus_reverse_lookup] == "127.0.0.4" {
                    mutate {
                        add_tag => [ "spam_address" ]
                    }
                }
            }
        }
        mutate {
            remove_field => ["addr1", "addr2", "addr3", "addr4", "spamhaus_reverse_lookup"]
        }
    }

    # Alienvault Check
    if [target_pub_ip] == [true] {
        http {
            url => "https://otx.alienvault.com/api/v1/indicators/IPv%{src_ipv}/%{ip}/general"
            headers => {
                "X-OTX-API-KEY" => ""
                "Content-Type" => "application/json"
            }
            target_body => "ovx"
        }
        mutate {
            copy => {
                "[ovx][reputation]" => "alienvault_score"
            }
            remove_field => ["ovx"]
        }
    }

    # Virustotal check
    if [target_pub_ip] == [true] {
        if [src_ipv] == '4' {
            http {
                url => "https://virustotal.com/api/v3/ip_addresses/%{ip}"
                headers => {
                    "x-apikey" => ""
                }
                target_body => "vt"
            }
            mutate {
                copy => {
                    "[vt][data][attributes][reputation]" => "virustotal_score"
                }
                remove_field => ["vt"]
            }
        }
    }

    # AbuseIPDB check
    if [target_pub_ip] == [true] {
        http {
            url => "https://api.abuseipdb.com/api/v2/check"
            headers => {
                "Acccept" => "application/json"
                "Key" => ""
            }
            query => {
                "ipAddress" => "%{ip}"
            }
            target_body => "abuseipdb"
        }
        mutate {
            copy => {
                "[abuseipdb][data][abuseConfidenceScore]" => "abuseipdb_score"
            }
            remove_field => ["headers", "abuseipdb"]
        }
    }

    # Team Cymru check
    if [target_pub_ip] == [true] {
        if [src_ipv] == '4' {
                teamcymru
                {
                    ip => "ip"
                }
        }
    }

    # Some cleanup
    mutate {
        remove_field => ["host", "event", "@timestamp", "@version", "src_ipv", "src_public_ip", "message"]
    }
}

output {
    stdout {}
}